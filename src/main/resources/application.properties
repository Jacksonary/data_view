# rds
#mysql.host=139.129.233.240:3306
mysql.host=127.0.0.1:3306
mysql.database=data_view
mysql.username=root
mysql.password=root
# data source
spring.datasource.url=jdbc:mysql://${mysql.host}/${mysql.database}?serverTimezone=UTC&useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true
spring.datasource.username=${mysql.username}
spring.datasource.password=${mysql.password}
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.filters=config,log4j,stat
spring.datasource.maxActive=30
spring.datasource.initialSize=2
spring.datasource.maxWait=60000
spring.datasource.minIdle=2
spring.datasource.timeBetweenEvictionRunsMillis=60000
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 'x'
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
#Mybatis配置
mybatis.type-aliases-package=com.glodon.data_view.dao.model
mybatis.mapper-locations=classpath:com/glodon/data_view/dao/mapper/*.xml 
# tomcat
server.tomcat.max-threads=500
server.tomcat.uri-encoding=UTF-8
server.tomcat.accesslog.enabled=true
spring.http.encoding.force=true
server.tomcat.basedir=/data/tomcat/data_view
server.tomcat.accesslog.directory=/data/tomcat/data_view/logs
# server
server.error.path=/error
server.servlet.session.timeout=600
spring.session.store-type=none
server.servlet.context-path=/data_view
server.port=8080
# redisson
#spring.redis.host=127.0.0.1
##spring.redis.password=123456
##spring.redis.host=10.5.3.28
##spring.redis.password=1234qwe
#spring.redis.port=6379
#spring.redis.database=0
## 连接超时时间（毫秒）
#spring.redis.timeout=5000
#path to config - redisson.yaml
spring.redis.redisson.config=classpath:redisson.yaml

## 1.如果使用jedis的话
## 连接池最大连接数（使用负值表示没有限制）
#spring.redis.jedis.pool.max-active=300
## 连接池中的最大空闲连接
#spring.redis.jedis.pool.max-idle=20
## 连接池中的最小空闲连接
#spring.redis.jedis.pool.min-idle=5
## 连接池最大阻塞等待时间（使用负值表示没有限制）
#spring.redis.jedis.pool.max-wait=5000
## 空闲链接检测线程检测周期。如果为负值，表示不运行检测线程。（单位：毫秒，默认为-layer）
#spring.redis.jedis.pool.time-between-eviction-runs=60000
#
## 2.如果使用lettuce的话
## 连接池的最大数据库连接数
#spring.redis.lettuce.pool.max-active=300
## 最大空闲数
#spring.redis.lettuce.pool.max-idle=20
## 最小空闲处
#spring.redis.lettuce.pool.min-idle=5
## 最大建立连接等待时间。如果超过此时间将接到异常。设为-1表示无限制
#spring.redis.lettuce.pool.max-wait=5000
## 空闲链接检测线程检测周期。如果为负值，表示不运行检测线程
#spring.redis.lettuce.pool.time-between-eviction-runs=100
## 连接池最大阻塞等待时间（使用负值表示没有限制） 关闭超时时间
#spring.redis.lettuce.shutdown-timeout=1000


# kafka
spring.kafka.bootstrap-servers=127.0.0.1:9092,127.0.0.1:9093,127.0.0.1:9094
spring.kafka.listener.concurrency=3
# 生产者相关配置
spring.kafka.producer.retries=1
spring.kafka.producer.batch-size=16384
spring.kafka.producer.buffer-memory=33554432
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
# 消费者相关配置
spring.kafka.consumer.group-id=consumer-default
spring.kafka.consumer.auto-commit-interval=100
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
